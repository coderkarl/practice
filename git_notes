git notes:

cd desire_dir
git clone https://github.com/coderkarl/yard_bot.git
cd yard_bot
(
side note, for geany build:
//gcc gcc -Wall -o "%e" "%f" move.o -lm
)

(If git push origin branch_name gives error)
git remote set-url origin https://coderkarl@github.com/coderkarl/yard_bot.git

edit files/folders as desired

cd path/to/project/repo
git checkout -b branch_name

edit files/folders as desired
(I think I can edit locally before or after the checkout command, test it)

git add .
git commit -a -m "message to show"
sudo git push origin branch_name

--------------------------------------------------------------
https://gist.github.com/digitaljhelms/4287848
branches: master, stable, hotfix, bugfix, feature

(feature example:)
git checkout -b feature-id master //local branch for new feature
git push origin feature-id //new feature remotely available
git merge master //merges changes from master into feature branch
(when feature is complete:)
git checkout master //change to master branch
git merge --no-ff feature-id //create commit object during merge
git push origin master //push merge changes
git push origin :feature-id //delete remote branch

(hotfix example:)
git checkout -b hotfix-id stable //local branch for hotfix
git push origin hotfix-id //new hotfix remotely available
(when hotfix is done:)
git checkout stable //change to stable branch
git merge --no-ff hotfix-id //forces creation of commit object during merge
git tag -a <tag> //tags the fix
git push origin stable --tags //push tag changes
(Now merge changes into master as well)
git checkout master
git merge --no-ff hotfix-id
git push origin master
git push origin :hotfix-id
(also try for delete)
git push origin --delete hotfix-id

----------------------------------------------------------------
https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial

----------------------------------------------------------------
stage changes (check git status afterward)
git add -u //adds deleted file to commit list
git add DIRECTORY //adds new folder to commit list
git add DIRECTORY/* //adds new folder contents to commit list

//need to commit before push
git commit -m "MESSAGE"
sudo git push origin branch-name

--------------------------------------------------------------
http://dont-be-afraid-to-commit.readthedocs.io/en/latest/git/commandlinegit.html

--------------------------------------------------------------
merge branches then push to origin master
# From my cmd history (~/.bash_history)
git add .
git add/rm *
git rm .
git add -u
git commit -a -m "call astar from python, in progress"
sudo git push origin my_branch
git checkout master
git checkout my_branch
git checkout master
git merge --no-ff my_branch
git push origin master
sudo git push origin master

#BEFORE, you were working on my_branch and pushing it to origin (the remote repo)
This made it to the online repo, but not to the master branch
If you want to work on just one master branch, just stay on master and use git push origin master
But you should practice with multiple remote branches now that you understand better.
Need to better understand fast forward and non-fast-forward pushes.
